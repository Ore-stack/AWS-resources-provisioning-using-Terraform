Context:

BrightEdge Technologies is setting up a new isolated environment for development workloads. The team needs to provision a VPC with subnets to prepare for upcoming EC2 deployments.

Task:

Complete the file stub /home/ubuntu/1841175-terraform-vpc-dev-environment/main.tf to fulfill the following requirements:
	•	Create a VPC with the CIDR block 10.10.0.0/16.
	•	Create two public subnets in different availability zones within eu-central-1.
	•	Associate an internet gateway and route all outbound traffic from the public subnets.
	•	Name the resources with the prefix brightedge-dev-*.

Note:
	•	Ensure the subnets are spread across at least 2 AZs.
	•	Run solve in the directory to validate the results.
	

ANSWER:

provider "aws" {
  region = "eu-central-1"
}

# Get available AZs in the region
data "aws_availability_zones" "available" {
  state = "available"
}

# VPC
resource "aws_vpc" "brightedge_dev_vpc" {
  cidr_block           = "10.10.0.0/16"
  enable_dns_hostnames = true
  enable_dns_support   = true

  tags = {
    Name = "brightedge-dev-vpc"
  }
}

# Internet Gateway
resource "aws_internet_gateway" "brightedge_dev_igw" {
  vpc_id = aws_vpc.brightedge_dev_vpc.id

  tags = {
    Name = "brightedge-dev-igw"
  }
}

# Public Subnet 1
resource "aws_subnet" "brightedge_dev_public_subnet_1" {
  vpc_id            = aws_vpc.brightedge_dev_vpc.id
  cidr_block        = "10.10.1.0/24"
  availability_zone = data.aws_availability_zones.available.names[0]
  map_public_ip_on_launch = true

  tags = {
    Name = "brightedge-dev-public-subnet-1"
  }
}

# Public Subnet 2
resource "aws_subnet" "brightedge_dev_public_subnet_2" {
  vpc_id            = aws_vpc.brightedge_dev_vpc.id
  cidr_block        = "10.10.2.0/24"
  availability_zone = data.aws_availability_zones.available.names[1]
  map_public_ip_on_launch = true

  tags = {
    Name = "brightedge-dev-public-subnet-2"
  }
}

# Route Table
resource "aws_route_table" "brightedge_dev_public_rt" {
  vpc_id = aws_vpc.brightedge_dev_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.brightedge_dev_igw.id
  }

  tags = {
    Name = "brightedge-dev-public-rt"
  }
}

# Associate route table with public subnet 1
resource "aws_route_table_association" "public_subnet_1_assoc" {
  subnet_id      = aws_subnet.brightedge_dev_public_subnet_1.id
  route_table_id = aws_route_table.brightedge_dev_public_rt.id
}

# Associate route table with public subnet 2
resource "aws_route_table_association" "public_subnet_2_assoc" {
  subnet_id      = aws_subnet.brightedge_dev_public_subnet_2.id
  route_table_id = aws_route_table.brightedge_dev_public_rt.id
}
